[{"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/index.js":"1","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/App.js":"2","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/LoginScreen.js":"3","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Dashboard.js":"4","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/SignUpScreen.js":"5","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreatePlaylist.js":"6","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Playlist.js":"7","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/NoMatch.js":"8","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Video.js":"9","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreateSong.js":"10","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditSong.js":"11","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditPlaylist.js":"12","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/PlaylistCard.js":"13","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/VideoCard.js":"14","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/getAverageRGB.js":"15"},{"size":196,"mtime":1607813440865,"results":"16","hashOfConfig":"17"},{"size":1405,"mtime":1609548137491,"results":"18","hashOfConfig":"17"},{"size":3416,"mtime":1609647644685,"results":"19","hashOfConfig":"17"},{"size":8001,"mtime":1609647607758,"results":"20","hashOfConfig":"17"},{"size":2923,"mtime":1609648557712,"results":"21","hashOfConfig":"17"},{"size":1355,"mtime":1609581780634,"results":"22","hashOfConfig":"17"},{"size":5847,"mtime":1609584399395,"results":"23","hashOfConfig":"17"},{"size":464,"mtime":1608091035884,"results":"24","hashOfConfig":"17"},{"size":3533,"mtime":1609212925969,"results":"25","hashOfConfig":"17"},{"size":784,"mtime":1609584214599,"results":"26","hashOfConfig":"17"},{"size":2328,"mtime":1609647605218,"results":"27","hashOfConfig":"17"},{"size":1241,"mtime":1609451769880,"results":"28","hashOfConfig":"17"},{"size":1669,"mtime":1609574440224,"results":"29","hashOfConfig":"17"},{"size":781,"mtime":1609546269820,"results":"30","hashOfConfig":"17"},{"size":1407,"mtime":1609547439268,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"13f4r41",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/index.js",[],["67","68"],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/App.js",["69"],"import {\n  BrowserRouter as Router, \n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport LoginScreen from './components/LoginScreen.js'\nimport SignUpScreen from './components/SignUpScreen.js'\nimport Dashboard from './components/Dashboard.js'\nimport CreatePlaylist from './components/CreatePlaylist.js'\nimport Playlist from './components/Playlist.js'\nimport Video from './components/Video.js'\nimport NoMatch from './components/NoMatch.js'\nimport EditSong from \"./components/EditSong.js\";\nimport EditPlaylist from \"./components/EditPlaylist.js\";\nimport CreateSong from \"./components/CreateSong.js\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={LoginScreen}></Route>\n          <Route path=\"/signup\" component={SignUpScreen}></Route>\n          <Route path=\"/dashboard\" component={Dashboard} render={(props) => <Dashboard {...props} />}></Route>  \n          <Route path=\"/create\" component={CreatePlaylist}></Route>\n          <Route path=\"/playlist/:id\" children={<Playlist />}></Route>\n          <Route path=\"/video/:id\" children={<Video />}></Route>\n          <Route path=\"/editPlaylist/:id\" children={<EditPlaylist />}></Route>\n          <Route path=\"/editSong/:id\" children={<EditSong />}></Route>\n          <Route component={NoMatch}></Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/LoginScreen.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Dashboard.js",["70","71","72"],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/SignUpScreen.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreatePlaylist.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Playlist.js",["73","74","75","76","77","78","79","80","81"],"import React, { useState, useEffect } from \"react\"\nimport { useParams, Link } from \"react-router-dom\"\nimport PopUp from 'reactjs-popup'\nimport axios from \"axios\"\nimport VideoCard from \"./VideoCard\";\nimport CreateSong from \"./CreateSong\";\nimport getAverageRGB from \"./getAverageRGB\"\n \n\n\n\n\n\nconst Playlist = () => {\n    const [playlistName, setPlaylistName] = useState(null)\n    const [playlistDesc, setPlaylistDesc] = useState(null)\n    const [songArray, setSongArray] = useState([])\n    const [songArrayInfo, setSongArrayInfo] = useState([])\n    const [newSongInfo, setNewSongInfo] = useState(null)\n    const [songInfo, setSongInfo] = useState({title: null, desc: null, link: null})\n    const [image, setImage] = useState(null)\n    const [dominantColor, setDominantColor] = useState(null)\n\n    \n    let { id } = useParams();\n    useEffect(() => {\n        console.log(songArray)\n        console.log(songArrayInfo)\n    })\n\n    useEffect(() => {\n        fetchData(id)\n        \n    }, [id])\n    useEffect(() => {\n        getDominantColor()\n        \n    }, [image])\n\n    useEffect(() => {\n        updatePlaylists()\n    }, [songArray])\n\n    //open/close create song panel\n    function openCloseCS() {\n        let createSongPanel = document.getElementById(\"create-song-wrapper\")\n        let createButton = document.getElementById(\"create-song-button\")\n        let playlistImage = document.getElementById(\"playlist-wrapper\")\n        console.log(createSongPanel.style.display)\n        if(createSongPanel) {\n            let newSetting = createSongPanel.style.display == \"none\" ? \"block\" : \"none\"\n            createSongPanel.style.display = newSetting\n            if(newSetting == \"block\") { \n                createButton.scrollIntoView()\n            }\n            else {\n                playlistImage.scrollIntoView()\n            }\n            \n        } \n    }\n    \n    function handleSongChange(e) {\n        const {name, value} = e.target\n        setSongInfo({\n            ...songInfo, [name]: value\n        })\n    }\n\n    function clearSongInput() {\n        setSongInfo({title: null, desc: null, link: null})\n    }\n\n    function handleSongSubmit(e) {\n        e.preventDefault();\n        axios.post(\"http://localhost:5000/songs/add\", songInfo)\n        .then(res => {\n            console.log(\"DATA: \", res.data)\n            setSongArray([...songArray, res.data])\n        })\n        openCloseCS()\n        clearSongInput()\n    }\n\n\n    function handleSongEdit(newInfo) {\n        setNewSongInfo(newInfo)\n    }\n\n    function updatePlaylists() {\n        axios.post(\"http://localhost:5000/playlists/updatePlaylistSongs\", {id: id, newSongs: songArray})\n        .then(res => {\n            console.log(res)\n            updateSongInfoArray()\n        })\n    }\n\n    function updateSongInfoArray() {\n        axios.post(\"http://localhost:5000/songs/findSongs\", {songArray: songArray})\n        .then(res => {\n            console.log(res)\n            setSongArrayInfo(res.data)\n        })\n    }\n\n    function deleteSong(e, id) {\n        e.preventDefault();\n        axios.delete(\"http://localhost:5000/songs/deleteSong/\" + id)\n        .then(res => console.log(res))\n        let songIndex = songArray.indexOf(id)\n        console.log(id)\n        console.log(songIndex)\n        songArray.splice(songIndex, 1)\n        console.log(\"SONGARRAY: \", songArray)\n        updatePlaylists()\n    }\n    return (\n        <div id=\"playlist-wrapper\">\n            <img src={image} alt=\"No image found.\" id=\"playlist-picture\"></img>\n            <h1 id=\"playlist-title\">{playlistName}</h1>\n            <h3 id=\"playlist-desc\">{playlistDesc}</h3>\n            {/* <h2 style={{\"color\": \"white\"}}> ID: {id} </h2> */}\n            <div id=\"videos-wrapper\">\n            {songArray.map(currentSong => {\n                let index = songArray.indexOf(currentSong)\n                let route = \"/video/\" + songArray[index]\n                if(songArray[index] !== undefined && songArrayInfo[index] !== undefined) {\n                    return <Link style={{\"textDecoration\": \"none\"}} to={route} key={songArray[index]}><VideoCard title={songArrayInfo[index].songName || \"No title found.\"} desc={songArrayInfo[index].songDesc || \"No description found.\"} id={songArray[index]} deleteSong={(e, id) => deleteSong(e, id)} /></Link>\n                }\n                else { return null; }\n             })}   \n            </div>\n            <button class=\"create-button\" onClick={() => openCloseCS()} id=\"create-song-button\"><i id=\"song-plus\" className=\"fa fa-plus\"></i></button>\n            <div id=\"create-song-wrapper\"><CreateSong handleChange ={(e) => handleSongChange(e)} handleSubmit={(e) => handleSongSubmit(e)} title={songInfo.title} desc={songInfo.desc} link={songInfo.link} /></div>\n        </div>\n      );\n    \n    function fetchData(id) {\n        let route = \"http://localhost:5000/playlists/\" + id\n        let data = null\n        axios.get(route)\n            .then(res => {\n                data = res.data\n                if(data !== null && data !== undefined) {\n                    console.log(\"DATA:\", data)\n                    setPlaylistName(data.playlistName)\n                    setPlaylistDesc(data.playlistDesc)\n                    setSongArray(data.songs)\n                    setImage(data.image)\n                }\n            })    \n    }\n    function getDominantColor() {\n        //For future, may change button color.\n        let imageElement = document.getElementById(\"playlist-picture\")\n        let buttonElement = document.getElementById(\"cr-playlist-button\")\n        const rgb = getAverageRGB(imageElement)\n        setDominantColor(rgb)\n        let rgbColor = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n        //let darkerColor = `rgb(${rgb.r * 0.8}, ${rgb.g * 0.8}, ${rgb.b * 0.8})`\n        imageElement.style.boxShadow = `0 0.5rem 10rem 1rem ${rgbColor}`\n    }\n}\n\n\n\n \nexport default Playlist; ","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/NoMatch.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Video.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreateSong.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditSong.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditPlaylist.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/PlaylistCard.js",["82","83"],"import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"\n\n\nconst PlaylistCard = (props) => {\n    console.log(props)\n    function deletePlaylist(e) {\n        props.deletePlaylist(e, props.index);\n    }\n    return ( \n        <div className=\"playlist-card\" id=\"playlist-card\">\n            <div id=\"playlist-license\"> <i class=\"fa fa-id-card\"></i> play-list card</div>\n            <div id=\"playlist-s1\">\n                <img id=\"playlist-image\" src={props.image} alt=\"No image found.\"></img>\n                <div id=\"playlist-s1-info\">\n                    <div id=\"playlist-title\"> <i class=\"fa fa-user\"></i> {props.title} </div>\n                    <div id=\"playlist-desc\"> <i class=\"fa fa-pencil\"></i> {props.desc} </div>\n                    <div id=\"playlist-songs\"> <i class=\"fa fa-music\"></i> {props.songs} Songs</div>\n                </div>\n            </div>\n            <div id=\"playlist-s2\">\n                <div id=\"playlist-id\"> {props.id} </div>\n                <div id=\"playlist-buttons\">\n                    <Link to=\"/editPlaylist\"><button id=\"edit-pl-button\" class=\"edit-button\"><i class=\"fa fa-edit\"></i></button></Link>\n                    <button id=\"del-pl-button\" class=\"trash-button\" onClick={(e) => deletePlaylist(e)}><i class=\"fa fa-trash\"></i></button>\n                </div>\n            </div>\n            \n        </div>  \n    )\n}\n \nexport default PlaylistCard;\n\n/*\n\n\n<div id=\"playlist-image-wrapper\">\n                <img id=\"playlist-image\" src={props.image} alt=\"No image found.\"></img>\n            </div>\n            <div id=\"playlist-title\"> {props.title} </div>\n            <div id=\"playlist-desc\"> {props.desc} </div>\n\n*/","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/VideoCard.js",["84"]," import axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"../assets/styles/Playlist.css\"\n\nfunction VideoCard(props) {\n    console.log(\"PROPS\", props)\n\n    \n\n    return (\n        <div id=\"video-card-wrapper\">\n            <div id=\"title\">\n                {props.title || \"No title found.\"}\n                <div id=\"desc\">{props.desc || \"This is a description. Feel free to add a description to highlight what this video talks about.\"}</div>\n            </div>\n            <Link to={{pathname: \"/editSong/\" + props.id}}><button class=\"edit-button\"><i class=\"fa fa-edit\"></i></button></Link>\n            <button class=\"trash-button\" onClick={(e) => props.deleteSong(e, props.id)}><i class=\"fa fa-trash\"></i></button>\n        </div>\n    )\n}\n\nexport default VideoCard;","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/getAverageRGB.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":16,"column":8,"nodeType":"91","messageId":"92","endLine":16,"endColumn":18},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":154,"column":27,"nodeType":"96","messageId":"97","endLine":154,"endColumn":29},{"ruleId":"89","severity":1,"message":"98","line":165,"column":13,"nodeType":"91","messageId":"92","endLine":165,"endColumn":18},{"ruleId":"89","severity":1,"message":"93","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":13},{"ruleId":"89","severity":1,"message":"99","line":19,"column":12,"nodeType":"91","messageId":"92","endLine":19,"endColumn":23},{"ruleId":"89","severity":1,"message":"100","line":22,"column":12,"nodeType":"91","messageId":"92","endLine":22,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":42,"column":8,"nodeType":"103","endLine":42,"endColumn":19,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"95","line":51,"column":60,"nodeType":"96","messageId":"97","endLine":51,"endColumn":62},{"ruleId":"94","severity":1,"message":"95","line":53,"column":27,"nodeType":"96","messageId":"97","endLine":53,"endColumn":29},{"ruleId":"89","severity":1,"message":"105","line":86,"column":14,"nodeType":"91","messageId":"92","endLine":86,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":119,"column":13,"nodeType":"108","endLine":119,"endColumn":74},{"ruleId":"89","severity":1,"message":"109","line":156,"column":13,"nodeType":"91","messageId":"92","endLine":156,"endColumn":26},{"ruleId":"89","severity":1,"message":"110","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":14,"column":17,"nodeType":"108","endLine":14,"endColumn":82},{"ruleId":"89","severity":1,"message":"111","line":1,"column":9,"nodeType":"91","messageId":"92","endLine":1,"endColumn":14},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'CreateSong' is defined but never used.","Identifier","unusedVar","'PopUp' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'input' is assigned a value but never used.","'newSongInfo' is assigned a value but never used.","'dominantColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updatePlaylists'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'handleSongEdit' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'buttonElement' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [songArray, updatePlaylists]",{"range":"117","text":"118"},[1117,1128],"[songArray, updatePlaylists]"]