[{"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/index.js":"1","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/App.js":"2","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/LoginScreen.js":"3","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Dashboard.js":"4","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/SignUpScreen.js":"5","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreatePlaylist.js":"6","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Playlist.js":"7","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/NoMatch.js":"8","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Video.js":"9","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreateSong.js":"10","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditSong.js":"11","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditPlaylist.js":"12","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/PlaylistCard.js":"13","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/VideoCard.js":"14","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/getAverageRGB.js":"15"},{"size":381,"mtime":1609675300495,"results":"16","hashOfConfig":"17"},{"size":1452,"mtime":1609658680581,"results":"18","hashOfConfig":"17"},{"size":3547,"mtime":1609673200374,"results":"19","hashOfConfig":"17"},{"size":8052,"mtime":1609675236568,"results":"20","hashOfConfig":"17"},{"size":3106,"mtime":1609671584936,"results":"21","hashOfConfig":"17"},{"size":1355,"mtime":1609581780634,"results":"22","hashOfConfig":"17"},{"size":6072,"mtime":1609674632242,"results":"23","hashOfConfig":"17"},{"size":496,"mtime":1609675079003,"results":"24","hashOfConfig":"17"},{"size":3816,"mtime":1609668866230,"results":"25","hashOfConfig":"17"},{"size":784,"mtime":1609584214599,"results":"26","hashOfConfig":"17"},{"size":2595,"mtime":1609674805579,"results":"27","hashOfConfig":"17"},{"size":1241,"mtime":1609451769880,"results":"28","hashOfConfig":"17"},{"size":1669,"mtime":1609574440224,"results":"29","hashOfConfig":"17"},{"size":820,"mtime":1609674730647,"results":"30","hashOfConfig":"17"},{"size":1407,"mtime":1609547439268,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13f4r41",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/index.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/App.js",["69"],"import React from 'react'\nimport {\n  BrowserRouter as Router, \n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport LoginScreen from './components/LoginScreen.js'\nimport SignUpScreen from './components/SignUpScreen.js'\nimport Dashboard from './components/Dashboard.js'\nimport CreatePlaylist from './components/CreatePlaylist.js'\nimport Playlist from './components/Playlist.js'\nimport Video from './components/Video.js'\nimport NoMatch from './components/NoMatch.js'\nimport EditSong from \"./components/EditSong.js\";\nimport EditPlaylist from \"./components/EditPlaylist.js\";\nimport CreateSong from \"./components/CreateSong.js\";\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route exact path=\"/\" component={LoginScreen}></Route>\n            <Route path=\"/signup\" component={SignUpScreen}></Route>\n            <Route path=\"/dashboard\" component={Dashboard} render={(props) => <Dashboard {...props} />}></Route>  \n            <Route path=\"/create\" component={CreatePlaylist}></Route>\n            <Route path=\"/playlist/:id\" children={<Playlist />}></Route>\n            <Route path=\"/video/:id\" children={<Video />}></Route>\n            <Route path=\"/editPlaylist/:id\" children={<EditPlaylist />}></Route>\n            <Route path=\"/editSong/:id\" children={<EditSong />}></Route>\n            <Route component={NoMatch}></Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n",["70","71"],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/LoginScreen.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Dashboard.js",["72","73","74"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport '../assets/styles/Dashboard.css'\nimport PlaylistCard from './PlaylistCard';\nimport PopUp from 'reactjs-popup'\nimport CreatePlaylist from './CreatePlaylist';\nimport axios from \"axios\"\nimport inDevelopment from \"../index\"\n\n\nconst serverLink = (inDevelopment) ? \"http://localhost:5000\" : \"https://contraband-playlist.herokuapp.com\" //change to localhost later\n\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            listOfPlaylistID: [],\n            listOfPlaylists: [],\n            base64Data: [],  \n            username: null,\n            password: null,\n            id: null,\n            playlistInput: {\n                title: null,\n                desc: null,\n                imagePreview: null,\n                image: null,\n                imageType: null\n            }\n         }\n\n        this.handlePlaylistSubmit = this.handlePlaylistSubmit.bind(this)\n        this.setImageData = this.setImageData.bind(this)\n\n    }\n\n    componentDidMount(props) {\n        if(this.props.location.state !== undefined) {\n            console.log(\"Info: \", this.props.location.state.userInfo)\n            let userInfo = this.props.location.state.userInfo\n            this.setState(prevState => ({\n            ...prevState,\n            username: userInfo[0],\n            password: userInfo[1],\n            listOfPlaylistID: userInfo[2].playlist,\n            id: userInfo[2]._id\n        }), function() { \n            console.log( this.state ); \n            this.getPlaylistIDs(); this.getPlaylists(); \n            this.animateElements()\n        })} \n    }\n\n    componentDidUpdate(props) {\n        //this.getPlaylists()\n    }\n\n    animateElements() {\n        let dashboardTitle = document.getElementById(\"dashboard-title\")\n        dashboardTitle.classList.add(\"fade-in\")\n        setTimeout(function() {\n            let playlistCard = document.getElementById(\"playlistCard-holder\")\n            playlistCard.classList.add(\"slide-in\")\n        }, 250)\n        \n    }\n\n    getPlaylistIDs() {\n        let users_url =  serverLink + \"/users/\" + this.state.id\n        axios.get(users_url)\n        .then(res => {console.log(res); this.setState({\n            listOfPlaylistID: res.data.playlist\n        }, function() { console.log(this.state); this.getPlaylists()})})\n    }\n\n    getPlaylists() {\n        let currentUserPlaylists = this.state.listOfPlaylistID\n        console.log(\"CURRENT USER PLAYLISTS: \", currentUserPlaylists)\n        axios.post(serverLink + \"/playlists/findPlaylists\", { playlistArray: currentUserPlaylists })\n        .then(res => {\n            console.log(res)\n            this.setState({\n                listOfPlaylists: res.data\n            })\n        })\n    }\n\n    handlePlaylistChange = (e) => {\n        const {name, value} = e.target\n        const FR = new FileReader();\n        const self = this;\n        console.log(name + \" \" + value)\n        if(name === \"image\") {\n            const imageFile = e.target.files[0]\n            FR.addEventListener(\"load\", function() {\n                self.setImageData(imageFile, FR.result)\n            })\n            FR.readAsDataURL(imageFile)\n        }\n        else {\n            this.setState(prevState => ({\n                ...prevState,\n                playlistInput: {\n                    ...prevState.playlistInput, [name]: value\n                }\n            }))\n        }\n    }\n\n    setImageData = (imageFile, base64Image) => {\n        this.setState(prevState => ({\n            ...prevState,\n            playlistInput: {\n                ...prevState.playlistInput, imagePreview: URL.createObjectURL(imageFile), image: base64Image, imageType: imageFile.type\n            }\n        }), function() { console.log(this.state.playlistInput.imageType)})\n    }\n\n    handlePlaylistSubmit = (e) => {\n        e.preventDefault();\n        let newPlaylist = { playlistName: this.state.playlistInput.title, playlistDesc: this.state.playlistInput.desc, songs: [], image: this.state.playlistInput.image, imageType: this.state.playlistInput.imageType}\n        axios.post(serverLink + \"/playlists/add\", newPlaylist)\n        .then(res => {console.log(res.data); this.updateUserPlaylist(res.data); this.openCloseCP(); this.clearCP(); })\n\n    }\n\n    updateUserPlaylist(playlistID=\"\") {\n        if(playlistID === \"Playlist name taken.\") return;\n        if(playlistID !== \"\") {\n            this.state.listOfPlaylistID.push(playlistID)\n        }\n        let listOfIDs = this.state.listOfPlaylistID; let userID = this.state.id;\n        console.log(\"PLAYLIST IDS: \", listOfIDs)\n        axios.post(serverLink + \"/users/updatePlaylist\", {id: userID, playlist: listOfIDs})\n            .then(res => {console.log(res); this.getPlaylists()})\n    }\n\n\n    deletePlaylist(e, index) {\n        e.preventDefault();\n        console.log(index)\n        let playlistID = this.state.listOfPlaylistID[index]\n        this.state.listOfPlaylistID.splice(index, 1)\n        this.state.listOfPlaylists.splice(index, 1)\n        axios.delete(serverLink + \"/playlists/delete/\" + playlistID)\n        .then(res => { console.log(res); this.updateUserPlaylist() })\n    }\n\n    openCloseCP() {\n        let createPlaylistElement = document.getElementById(\"create-playlist-wrapper\")\n        let dashboardTitle = document.getElementById(\"dashboard-title\")\n        if(createPlaylistElement) {\n            let newSetting = (createPlaylistElement.style.display === \"none\" || createPlaylistElement.style.display === \"\") ? \"block\" : \"none\"\n            createPlaylistElement.style.display = newSetting\n            if(newSetting == \"block\") { \n                createPlaylistElement.scrollIntoView()\n            }\n            else {\n                dashboardTitle.scrollIntoView()\n            }\n           \n        }\n    }\n\n    clearCP() {\n        var input = {...this.state.playlistInput}\n        this.setState(prevState => ({\n            ...prevState, \n            playlistInput: {\n                ...prevState.playlistInput, title: \"\", desc: \"\", image: \"\", imagePreview: \"\", imageType: \"\"\n            }\n        }), () => {console.log(this.state.playlistInput)})\n    }\n\n    render() { \n        console.log(this.state.playlistInput)\n        return (\n            <div id=\"dashboard-wrapper\">\n                <div id=\"dashboard-title\">\n                    <span id=\"dashboard-subtitle\">Welcome back,</span><br></br> {this.state.username}! \n                    <br></br>\n                    <span id=\"dashboard-subtitle\">Here are your playlists:</span>\n                </div>\n                <div id=\"playlistCard-holder\">\n                    {this.state.listOfPlaylists.map(currentPlaylist => {\n                        let index = this.state.listOfPlaylists.indexOf(currentPlaylist)\n                        let ID = this.state.listOfPlaylistID[index]\n                        let songs = this.state.listOfPlaylists[index].songs.length\n                        let image = this.state.listOfPlaylists[index].image\n                        let newRoute = \"/playlist/\" + ID\n                        return <Link to={{pathname: newRoute, state: {image: image}}} style={{\"textDecoration\": \"none\"}}><PlaylistCard id={ID} songs={songs} key={currentPlaylist.playlistName} title={currentPlaylist.playlistName} desc={currentPlaylist.playlistDesc} image={image} index={index} deletePlaylist={(e, index) => this.deletePlaylist(e, index)} /></Link>\n                    })}\n                </div>\n                <button class=\"create-button\" onClick={() => this.openCloseCP()} id=\"create-playlist-button\">New Playlist<i id=\"plus\" class=\"fa fa-plus\"></i></button>\n                <div id=\"create-playlist-wrapper\"><CreatePlaylist handleChange={(e) => this.handlePlaylistChange(e)} handleSubmit={(e) => this.handlePlaylistSubmit(e)} image={this.state.playlistInput.imagePreview} title={this.state.playlistInput.title} desc={this.state.playlistInput.desc} /></div>\n                \n            </div>\n          );\n    }\n}\n \nexport default Dashboard;","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/SignUpScreen.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreatePlaylist.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Playlist.js",["75","76","77","78","79","80","81","82","83","84"],"import React, { useState, useEffect } from \"react\"\nimport { useParams, Link } from \"react-router-dom\"\nimport PopUp from 'reactjs-popup'\nimport axios from \"axios\"\nimport VideoCard from \"./VideoCard\";\nimport CreateSong from \"./CreateSong\";\nimport getAverageRGB from \"./getAverageRGB\"\nimport inDevelopment from \"../index\"\n \n\nconst serverLink = (inDevelopment) ? \"http://localhost:5000\" : \"https://contraband-playlist.herokuapp.com\" //change to localhost later\n\n\nconst Playlist = () => {\n    const [playlistName, setPlaylistName] = useState(null)\n    const [playlistDesc, setPlaylistDesc] = useState(null)\n    const [songArray, setSongArray] = useState([])\n    const [songArrayInfo, setSongArrayInfo] = useState([])\n    const [newSongInfo, setNewSongInfo] = useState(null)\n    const [songInfo, setSongInfo] = useState({title: null, desc: null, link: null})\n    const [image, setImage] = useState(null)\n    const [dominantColor, setDominantColor] = useState(null)\n\n    \n    let { id } = useParams();\n    useEffect(() => {\n        console.log(songArray)\n        console.log(songArrayInfo)\n    })\n\n    useEffect(() => {\n        fetchData(id)\n        \n    }, [id])\n    useEffect(() => {\n        getDominantColor()\n        \n    }, [image])\n\n    useEffect(() => {\n        updatePlaylists()\n    }, [songArray])\n\n    //open/close create song panel\n    function openCloseCS() {\n        let createSongPanel = document.getElementById(\"create-song-wrapper\")\n        let createButton = document.getElementById(\"create-song-button\")\n        let playlistImage = document.getElementById(\"playlist-wrapper\")\n        console.log(createSongPanel.style.display)\n        if(createSongPanel) {\n            let newSetting = (createSongPanel.style.display == \"none\" || createSongPanel.style.display == \"\") ? \"block\" : \"none\"\n            console.log(newSetting)\n            createSongPanel.style.display = newSetting\n            if(newSetting == \"block\") { \n                createButton.scrollIntoView()\n            }\n            else {\n                playlistImage.scrollIntoView()\n            }\n            \n        } \n    }\n    \n    function handleSongChange(e) {\n        const {name, value} = e.target\n        setSongInfo({\n            ...songInfo, [name]: value\n        })\n    }\n\n    function clearSongInput() {\n        setSongInfo({title: null, desc: null, link: null})\n    }\n\n    function handleSongSubmit(e) {\n        e.preventDefault();\n        axios.post(serverLink + \"/songs/add\", songInfo)\n        .then(res => {\n            console.log(\"DATA: \", res.data)\n            setSongArray([...songArray, res.data])\n        })\n        openCloseCS()\n        clearSongInput()\n    }\n\n\n    function handleSongEdit(newInfo) {\n        setNewSongInfo(newInfo)\n    }\n\n    function updatePlaylists() {\n        axios.post(serverLink + \"/playlists/updatePlaylistSongs\", {id: id, newSongs: songArray})\n        .then(res => {\n            console.log(res)\n            updateSongInfoArray()\n        })\n    }\n\n    function updateSongInfoArray() {\n        axios.post(serverLink + \"/songs/findSongs\", {songArray: songArray})\n        .then(res => {\n            console.log(res)\n            setSongArrayInfo(res.data)\n        })\n    }\n\n    function deleteSong(e, id) {\n        e.preventDefault();\n        axios.delete(serverLink + \"/songs/deleteSong/\" + id)\n        .then(res => console.log(res))\n        let songIndex = songArray.indexOf(id)\n        console.log(id)\n        console.log(songIndex)\n        songArray.splice(songIndex, 1)\n        console.log(\"SONGARRAY: \", songArray)\n        updatePlaylists()\n    }\n    return (\n        <div id=\"playlist-wrapper\">\n            <img src={image} alt=\"No image found.\" id=\"playlist-picture\"></img>\n            <h1 id=\"playlist-title\">{playlistName}</h1>\n            <h3 id=\"playlist-desc\">{playlistDesc}</h3>\n            {/* <h2 style={{\"color\": \"white\"}}> ID: {id} </h2> */}\n            <div id=\"videos-wrapper\">\n            {songArray.map(currentSong => {\n                let index = songArray.indexOf(currentSong)\n                let route = \"/video/\" + songArray[index]\n                if(songArray[index] !== undefined && songArrayInfo[index] !== undefined) {\n                    return <Link style={{\"textDecoration\": \"none\"}} to={route} key={songArray[index]}><VideoCard title={songArrayInfo[index].songName || \"No title found.\"} desc={songArrayInfo[index].songDesc || \"No description found.\"} id={songArray[index]} playlistId = {id} deleteSong={(e, id) => deleteSong(e, id)} /></Link>\n                }\n                else { return null; }\n             })}   \n            </div>\n            <button class=\"create-button\" onClick={() => openCloseCS()} id=\"create-song-button\"><i id=\"song-plus\" className=\"fa fa-plus\"></i></button>\n            <div id=\"create-song-wrapper\"><CreateSong handleChange ={(e) => handleSongChange(e)} handleSubmit={(e) => handleSongSubmit(e)} title={songInfo.title} desc={songInfo.desc} link={songInfo.link} /></div>\n        </div>\n      );\n    \n    function fetchData(id) {\n        let route = serverLink + \"/playlists/\" + id\n        let data = null\n        axios.get(route)\n            .then(res => {\n                data = res.data\n                if(data !== null && data !== undefined) {\n                    console.log(\"DATA:\", data)\n                    setPlaylistName(data.playlistName)\n                    setPlaylistDesc(data.playlistDesc)\n                    setSongArray(data.songs)\n                    setImage(data.image)\n                }\n            })    \n    }\n    function getDominantColor() {\n        //For future, may change button color.\n        let imageElement = document.getElementById(\"playlist-picture\")\n        let buttonElement = document.getElementById(\"cr-playlist-button\")\n        const rgb = getAverageRGB(imageElement)\n        setDominantColor(rgb)\n        let rgbColor = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n        //let darkerColor = `rgb(${rgb.r * 0.8}, ${rgb.g * 0.8}, ${rgb.b * 0.8})`\n        imageElement.style.boxShadow = `0 0.5rem 10rem 1rem ${rgbColor}`\n    }\n}\n\n\n\n \nexport default Playlist; ","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/NoMatch.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/Video.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/CreateSong.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditSong.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/EditPlaylist.js",[],"/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/PlaylistCard.js",["85","86"],"import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"\n\n\nconst PlaylistCard = (props) => {\n    console.log(props)\n    function deletePlaylist(e) {\n        props.deletePlaylist(e, props.index);\n    }\n    return ( \n        <div className=\"playlist-card\" id=\"playlist-card\">\n            <div id=\"playlist-license\"> <i class=\"fa fa-id-card\"></i> play-list card</div>\n            <div id=\"playlist-s1\">\n                <img id=\"playlist-image\" src={props.image} alt=\"No image found.\"></img>\n                <div id=\"playlist-s1-info\">\n                    <div id=\"playlist-title\"> <i class=\"fa fa-user\"></i> {props.title} </div>\n                    <div id=\"playlist-desc\"> <i class=\"fa fa-pencil\"></i> {props.desc} </div>\n                    <div id=\"playlist-songs\"> <i class=\"fa fa-music\"></i> {props.songs} Songs</div>\n                </div>\n            </div>\n            <div id=\"playlist-s2\">\n                <div id=\"playlist-id\"> {props.id} </div>\n                <div id=\"playlist-buttons\">\n                    <Link to=\"/editPlaylist\"><button id=\"edit-pl-button\" class=\"edit-button\"><i class=\"fa fa-edit\"></i></button></Link>\n                    <button id=\"del-pl-button\" class=\"trash-button\" onClick={(e) => deletePlaylist(e)}><i class=\"fa fa-trash\"></i></button>\n                </div>\n            </div>\n            \n        </div>  \n    )\n}\n \nexport default PlaylistCard;\n\n/*\n\n\n<div id=\"playlist-image-wrapper\">\n                <img id=\"playlist-image\" src={props.image} alt=\"No image found.\"></img>\n            </div>\n            <div id=\"playlist-title\"> {props.title} </div>\n            <div id=\"playlist-desc\"> {props.desc} </div>\n\n*/","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/VideoCard.js",["87"]," import axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"../assets/styles/Playlist.css\"\n\nfunction VideoCard(props) {\n    console.log(\"PROPS\", props)\n\n    \n\n    return (\n        <div id=\"video-card-wrapper\">\n            <div id=\"title\">\n                {props.title || \"No title found.\"}\n                <div id=\"desc\">{props.desc || \"This is a description. Feel free to add a description to highlight what this video talks about.\"}</div>\n            </div>\n            <Link to={{pathname: \"/editSong/\" + props.id, state: {playlistId: props.playlistId}}}><button class=\"edit-button\"><i class=\"fa fa-edit\"></i></button></Link>\n            <button class=\"trash-button\" onClick={(e) => props.deleteSong(e, props.id)}><i class=\"fa fa-trash\"></i></button>\n        </div>\n    )\n}\n\nexport default VideoCard;","/Users/lchris/Desktop/Coding/webprojects/play-list/client/src/components/getAverageRGB.js",[],["88","89"],{"ruleId":"90","severity":1,"message":"91","line":17,"column":8,"nodeType":"92","messageId":"93","endLine":17,"endColumn":18},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":156,"column":27,"nodeType":"101","messageId":"102","endLine":156,"endColumn":29},{"ruleId":"90","severity":1,"message":"103","line":167,"column":13,"nodeType":"92","messageId":"93","endLine":167,"endColumn":18},{"ruleId":"90","severity":1,"message":"98","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"104","line":19,"column":12,"nodeType":"92","messageId":"93","endLine":19,"endColumn":23},{"ruleId":"90","severity":1,"message":"105","line":22,"column":12,"nodeType":"92","messageId":"93","endLine":22,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":42,"column":8,"nodeType":"108","endLine":42,"endColumn":19,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"100","line":51,"column":61,"nodeType":"101","messageId":"102","endLine":51,"endColumn":63},{"ruleId":"99","severity":1,"message":"100","line":51,"column":104,"nodeType":"101","messageId":"102","endLine":51,"endColumn":106},{"ruleId":"99","severity":1,"message":"100","line":54,"column":27,"nodeType":"101","messageId":"102","endLine":54,"endColumn":29},{"ruleId":"90","severity":1,"message":"110","line":87,"column":14,"nodeType":"92","messageId":"93","endLine":87,"endColumn":28},{"ruleId":"111","severity":1,"message":"112","line":120,"column":13,"nodeType":"113","endLine":120,"endColumn":74},{"ruleId":"90","severity":1,"message":"114","line":157,"column":13,"nodeType":"92","messageId":"93","endLine":157,"endColumn":26},{"ruleId":"90","severity":1,"message":"115","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":14,"column":17,"nodeType":"113","endLine":14,"endColumn":82},{"ruleId":"90","severity":1,"message":"116","line":1,"column":9,"nodeType":"92","messageId":"93","endLine":1,"endColumn":14},{"ruleId":"94","replacedBy":"117"},{"ruleId":"96","replacedBy":"118"},"no-unused-vars","'CreateSong' is defined but never used.","Identifier","unusedVar","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'PopUp' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'input' is assigned a value but never used.","'newSongInfo' is assigned a value but never used.","'dominantColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updatePlaylists'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'handleSongEdit' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'buttonElement' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.",["119"],["120"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [songArray, updatePlaylists]",{"range":"124","text":"125"},[1287,1298],"[songArray, updatePlaylists]"]